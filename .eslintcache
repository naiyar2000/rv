[{"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\index.js":"1","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\reportWebVitals.js":"2","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\App.js":"3","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Scores.js":"4","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Home.js":"5","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Login.js":"6","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\PrivateRoute.js":"7","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Schedule.js":"8","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\News.js":"9","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Rules.js":"10","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Results.js":"11","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Auth.js":"12","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\SignUp.js":"13","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Teams.js":"14","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\BuzzerForm.js":"15","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\BuzzerAdmin.js":"16","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\base.js":"17","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\NavigationBar.js":"18","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\AdminUpcoming.js":"19","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\NewTemplate.js":"20","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\UpcomingEvents.js":"21","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Hamburger.js":"22","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Buzzer.js":"23","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Voting.js":"24","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\AdminVoting.js":"25","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\AdminEvent.js":"26","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Events.js":"27","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\StartVoting.js":"28","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\VotingResult.js":"29","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\VotingEvent.js":"30","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\VotingResultList.js":"31","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\UserResult.js":"32"},{"size":517,"mtime":1610175859821,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1610175859825,"results":"35","hashOfConfig":"34"},{"size":2146,"mtime":1611130969043,"results":"36","hashOfConfig":"34"},{"size":2086,"mtime":1610175859809,"results":"37","hashOfConfig":"34"},{"size":11035,"mtime":1610175859784,"results":"38","hashOfConfig":"34"},{"size":1841,"mtime":1610175859786,"results":"39","hashOfConfig":"34"},{"size":553,"mtime":1610175859797,"results":"40","hashOfConfig":"34"},{"size":4592,"mtime":1610175859805,"results":"41","hashOfConfig":"34"},{"size":3352,"mtime":1610175859796,"results":"42","hashOfConfig":"34"},{"size":1161,"mtime":1610175859802,"results":"43","hashOfConfig":"34"},{"size":8902,"mtime":1610175859800,"results":"44","hashOfConfig":"34"},{"size":884,"mtime":1610175859767,"results":"45","hashOfConfig":"34"},{"size":2413,"mtime":1610175859810,"results":"46","hashOfConfig":"34"},{"size":573,"mtime":1610175859813,"results":"47","hashOfConfig":"34"},{"size":4710,"mtime":1610277639845,"results":"48","hashOfConfig":"34"},{"size":3190,"mtime":1610277342901,"results":"49","hashOfConfig":"34"},{"size":487,"mtime":1610175859818,"results":"50","hashOfConfig":"34"},{"size":3663,"mtime":1610976648500,"results":"51","hashOfConfig":"34"},{"size":14998,"mtime":1610175859757,"results":"52","hashOfConfig":"34"},{"size":343,"mtime":1610175859793,"results":"53","hashOfConfig":"34"},{"size":788,"mtime":1610175859816,"results":"54","hashOfConfig":"34"},{"size":3585,"mtime":1610976648499,"results":"55","hashOfConfig":"34"},{"size":1384,"mtime":1610277342900,"results":"56","hashOfConfig":"34"},{"size":15962,"mtime":1611418339477,"results":"57","hashOfConfig":"34"},{"size":6152,"mtime":1611130969040,"results":"58","hashOfConfig":"34"},{"size":4861,"mtime":1611411105477,"results":"59","hashOfConfig":"34"},{"size":1489,"mtime":1611130969046,"results":"60","hashOfConfig":"34"},{"size":7252,"mtime":1611483088336,"results":"61","hashOfConfig":"34"},{"size":4770,"mtime":1611482338260,"results":"62","hashOfConfig":"34"},{"size":1155,"mtime":1610957647426,"results":"63","hashOfConfig":"34"},{"size":995,"mtime":1611482210579,"results":"64","hashOfConfig":"34"},{"size":3984,"mtime":1611130969051,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"14nogto",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\index.js",[],["141","142"],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\reportWebVitals.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\App.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Scores.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Home.js",["143"],"import React, { useState } from 'react'\r\nimport app from './base'\r\nimport Hamburger from './Hamburger';\r\nimport \"./Home.css\"\r\nimport NavigationBar from './NavigationBar';\r\nimport UpcomingEvents from './UpcomingEvents';\r\n\r\nconst Home = () => {\r\n    // const { currentUser } = useContext(AuthContext);\r\n    // const [event, setEvent] = useState(\" \");\r\n    // let today = new Date().toLocaleDateString(\"en-US\");\r\n    let today = new Date();\r\n    let nextDay = new Date();\r\n    nextDay.setDate(new Date().getDate() + 1);\r\n\r\n    const [upcomingEvents, setUpcomingEvents] = useState([]);\r\n    let [red, setRed] = useState({});\r\n    let [blue, setBlue] = useState({});\r\n    let [green, setGreen] = useState({});\r\n    let [white, setWhite] = useState({});\r\n    console.log(nextDay.getTime())\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await app.firestore().collection('events').orderBy(\"date\").get();\r\n                const rdata = await app.firestore().collection('teams').doc('red').get();\r\n                const bdata = await app.firestore().collection('teams').doc('blue').get();\r\n                const wdata = await app.firestore().collection('teams').doc('white').get();\r\n                const gdata = await app.firestore().collection('teams').doc('green').get();\r\n                setRed(rdata.data());\r\n                setBlue(bdata.data());\r\n                setGreen(gdata.data());\r\n                setWhite(wdata.data());\r\n                data.docs.forEach((res) => {\r\n                    if(today.valueOf() < res.data().date.toDate().valueOf() && nextDay.getTime().valueOf() > res.data().date.toDate().valueOf())  {\r\n                        setUpcomingEvents(oldEvents => [...oldEvents, res.data()]);\r\n                    }\r\n                });\r\n                // console.log(data.docs[0].data().date.toDate());\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            <NavigationBar />\r\n            <Hamburger title=\"HOME\" />\r\n\r\n            <div className=\"home\"><br/>\r\n                <h3>RV Togetherness Festival</h3>\r\n                <br/>\r\n                <h3>Jan 1st to Feb 14th</h3>\r\n                <h3>It's fun to be together</h3>\r\n            </div>\r\n\r\n            <div className=\"calendar\">\r\n                    <h4>Today's events ({today.toLocaleDateString('en-US')})</h4>\r\n                    {/* <h5>Calendar</h5> */}\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"white-container\">\r\n                <div style={{width: 300}}></div>\r\n                {\r\n                    upcomingEvents.length !==0 ? (\r\n                    upcomingEvents.map((x) =>  {\r\n                        return (\r\n                        <UpcomingEvents event={x.eventname} slot={x.Slot} team1={x.Team1} team2={x.Team2}/>\r\n                        )\r\n                    })) : (\r\n                    <div className=\"spinnerAreaHome\">\r\n                        <div className=\"spinner\">\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>)\r\n                }\r\n            </div>\r\n\r\n            <br/>\r\n            <div className=\"calendar2\">\r\n               <h4>Teams</h4>\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"TeamContainer\">\r\n                <div className=\"red extra\">\r\n                    <div className=\"teamHeader\">\r\n                        <div className=\"block\">RF</div>\r\n                        <div className=\"teamName\">Red Fire</div>\r\n                    </div>\r\n                    <div className=\"eventWon\">\r\n                        <div>Event Won</div>\r\n                        <div>12</div>\r\n                    </div>\r\n                    <div className=\"eventLost\">\r\n                        <div>Event Lost</div>\r\n                        <div>5</div>\r\n                    </div>\r\n                    <div className=\"numberOfEvents\">\r\n                        <div>No of Events</div>\r\n                        <div>17</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedEvent\">\r\n                        <div>Points Earned(Event)</div>\r\n                        <div>1200</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedOrganised\">\r\n                        <div>Points Earned(Organised)</div>\r\n                        <div>35</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"red extra\">\r\n                    <div className=\"teamHeader\">\r\n                        <div className=\"block\">RF</div>\r\n                        <div className=\"teamName\">Red Fire</div>\r\n                    </div>\r\n                    <div className=\"eventWon\">\r\n                        <div>Event Won</div>\r\n                        <div>12</div>\r\n                    </div>\r\n                    <div className=\"eventLost\">\r\n                        <div>Event Lost</div>\r\n                        <div>5</div>\r\n                    </div>\r\n                    <div className=\"numberOfEvents\">\r\n                        <div>No of Events</div>\r\n                        <div>17</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedEvent\">\r\n                        <div>Points Earned(Event)</div>\r\n                        <div>1200</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedOrganised\">\r\n                        <div>Points Earned(Organised)</div>\r\n                        <div>35</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"red\" style={{color: '#ffffff'}}>\r\n                    <div className=\"teamHeader\">\r\n                        <div className=\"block\">RF</div>\r\n                        <div className=\"teamName\">Red Fire</div>\r\n                    </div>\r\n                    <div className=\"eventWon\">\r\n                        <div>Event Won</div>\r\n                        <div>{red.won}</div>\r\n                    </div>\r\n                    <div className=\"eventLost\">\r\n                        <div>Event Lost</div>\r\n                        <div>{red.lost}</div>\r\n                    </div>\r\n                    <div className=\"numberOfEvents\">\r\n                        <div>No of Events</div>\r\n                        <div>{red.total}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedEvent\">\r\n                        <div>Points Earned(Event)</div>\r\n                        <div>{red.Epoints}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedOrganised\">\r\n                        <div>Points Earned(Organised)</div>\r\n                        <div>{red.Opoints}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"white\">\r\n                <div className=\"teamHeader\">\r\n                        <div className=\"block\">WW</div>\r\n                        <div className=\"teamName\">White Winds</div>\r\n                    </div>\r\n                    <div className=\"eventWon\">\r\n                        <div>Event Won</div>\r\n                        <div>{white.won}</div>\r\n                    </div>\r\n                    <div className=\"eventLost\">\r\n                        <div>Event Lost</div>\r\n                        <div>{white.lost}</div>\r\n                    </div>\r\n                    <div className=\"numberOfEvents\">\r\n                        <div>No of Events</div>\r\n                        <div>{white.total}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedEvent\">\r\n                        <div>Points Earned(Event)</div>\r\n                        <div>{white.Epoints}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedOrganised\">\r\n                        <div>Points Earned(Organised)</div>\r\n                        <div>{white.Opoints}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"blue\" style={{color: '#ffffff'}}>\r\n                <div className=\"teamHeader\">\r\n                        <div className=\"block\">BO</div>\r\n                        <div className=\"teamName\">Blue Ocean</div>\r\n                    </div>\r\n                    <div className=\"eventWon\">\r\n                        <div>Event Won</div>\r\n                        <div>{blue.won}</div>\r\n                    </div>\r\n                    <div className=\"eventLost\">\r\n                        <div>Event Lost</div>\r\n                        <div>{blue.lost}</div>\r\n                    </div>\r\n                    <div className=\"numberOfEvents\">\r\n                        <div>No of Events</div>\r\n                        <div>{blue.total}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedEvent\">\r\n                        <div>Points Earned(Event)</div>\r\n                        <div>{blue.Epoints}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedOrganised\">\r\n                        <div>Points Earned(Organised)</div>\r\n                        <div>{blue.Opoints}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"green\" style={{color: '#ffffff'}}>\r\n                <div className=\"teamHeader\">\r\n                        <div className=\"block\">GE</div>\r\n                        <div className=\"teamName\">Green Earth</div>\r\n                    </div>\r\n                    <div className=\"eventWon\">\r\n                        <div>Event Won</div>\r\n                        <div>{green.won}</div>\r\n                    </div>\r\n                    <div className=\"eventLost\">\r\n                        <div>Event Lost</div>\r\n                        <div>{green.lost}</div>\r\n                    </div>\r\n                    <div className=\"numberOfEvents\">\r\n                        <div>No of Events</div>\r\n                        <div>{green.total}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedEvent\">\r\n                        <div>Points Earned(Event)</div>\r\n                        <div>{green.Epoints}</div>\r\n                    </div>\r\n                    <div className=\"pointsEarnedOrganised\">\r\n                        <div>Points Earned(Organised)</div>\r\n                        <div>{green.Opoints}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n\r\n            <div className=\"footer\">\r\n                    <div>\r\n                        <h3>Coordinators:</h3>\r\n                        <h5>Rajendra Tapadia</h5>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        <h3>Contacts:</h3>\r\n                        <h5>+919490233170</h5>\r\n                    </div>\r\n            </div>\r\n\r\n    \r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Login.js",["144"],"import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport app from \"./base.js\";\r\nimport './login.css'\r\nimport { AuthContext } from \"./Auth.js\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        let res = await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginSection\">\r\n        <div className=\"title\">\r\n            RV TOGETHERNESS FESTIVAL <br/> <span className=\"spanText\">Jan 1st to Feb 14th</span>\r\n        </div>\r\n        {/* <div className=\"buzzerDiv\">\r\n          <Link to=\"/buzzerForm\">\r\n            <button>GO TO BUZZER ROUND</button>\r\n          </Link>\r\n        </div> */}\r\n        <div className=\"formSide\">\r\n        <h1>Log in</h1>\r\n        <form onSubmit={handleLogin}>\r\n            <label>\r\n            Email address\r\n            </label> <br/>\r\n            <input className=\"emailInput\" name=\"email\" type=\"email\" /> <br/>\r\n            <label>\r\n            Password\r\n            </label> <br/>\r\n            <input className=\"passwordInput\" name=\"password\" type=\"password\" /> <br/>\r\n            <button className=\"loginButton\" type=\"submit\">Log in</button>\r\n            <Link to=\"/signUp\"><span className=\"details\">If not registered you can Register</span></Link>\r\n        </form>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\PrivateRoute.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Schedule.js",["145","146","147","148"],"import React, { useState } from 'react'\r\nimport AdminUpcoming from './AdminUpcoming';\r\nimport app from './base'\r\nimport Hamburger from './Hamburger';\r\nimport NavigationBar from './NavigationBar';\r\n// import \"./Schedule.css\"\r\n\r\nconst Schedule = () => {\r\n    let month = new Date().getMonth();\r\n    let date = new Date().getDate();\r\n    let year = new Date().getFullYear();\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    \r\n    // let today = new Date().getTime();\r\n    const [upcomingEvents, setUpcomingEvents] = useState([]);\r\n    const [filteredEvents, setFilteredEvents] = useState([]);\r\n\r\n    const [text, setText] = useState(\" \");\r\n    const [isSports, setSports] = useState(true);\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await app.firestore().collection('events').orderBy(\"date\").get();\r\n                data.docs.forEach((res) => {\r\n                    // if(today.valueOf() < res.data().date.toDate().valueOf()) {\r\n                        setUpcomingEvents(oldEvents => [...oldEvents, res.data()]);\r\n                    // }\r\n                });\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onChangeText = (e) => {\r\n        const temp = e.target.value.toLowerCase();\r\n        setText(temp);\r\n        filterFunction();\r\n    }\r\n\r\n    const filterFunction = () => {\r\n        setFilteredEvents(upcomingEvents.filter((data) => {\r\n            const temp1 = text.split(\" \").join(\"\");\r\n            const temp2 = data.eventname.toLowerCase().split(\" \").join(\"\");\r\n            return temp2.indexOf(temp1) !== -1 \r\n        }));\r\n        console.log(filteredEvents);\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <NavigationBar />\r\n            <Hamburger title=\"SCHEDULE\" />\r\n            <br/>\r\n\r\n            <div className=\"resultSection\">\r\n                <div className=\"selectionTabs\">\r\n                    {isSports===true?(\r\n                                <button onClick={() => setSports(true)} style={{border: '#000000 solid 2px'}}>Sports</button>\r\n                            ):(\r\n                                <button onClick={() => setSports(true)}>Sports</button>\r\n                            )}\r\n                            {isSports===false?(\r\n                                <button onClick={() => setSports(false)} style={{border: '#000000 solid 2px'}}>Cultural</button>\r\n\r\n                            ):(\r\n                                <button onClick={() => setSports(false)}>Cultural</button>\r\n                                )}\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"searchEventBar\"\r\n                    onChangeCapture={e => onChangeText(e)}\r\n                    placeholder=\"&#xF042;SELECT AND SEARCH THE EVENT\"\r\n                />\r\n            </div>\r\n\r\n            \r\n\r\n            {/* <div className=\"resultSection\">\r\n                <div className=\"eventDate\">\r\n                    {months[month]} {date}, {year} \r\n                </div>\r\n            </div> */}\r\n\r\n            {\r\n                filteredEvents.length===0 ? (\r\n                    upcomingEvents.length !==0?(\r\n                upcomingEvents.map((res) => {\r\n                    return <AdminUpcoming key={res.index} slot={res.Slot} index={res.index} event={res.eventname} team1={res.Team1} team2={res.Team2} isAdmin={false} code={res.Code} winner={res.winner} isCompleted={res.isCompleted} date={res.date}/>\r\n                })):(<div className=\"spinnerArea\"><div className=\"spinner\"><div></div><div></div></div></div>)) : (\r\n                    filteredEvents.map((res) => {\r\n                        return <AdminUpcoming key={res.index} slot={res.Slot} index={res.index} event={res.eventname} team1={res.Team1} team2={res.Team2} isAdmin={false} code={res.Code} winner={res.winner} isCompleted={res.isCompleted} date={res.date}/>\r\n                    })\r\n                )\r\n            }\r\n\r\n            \r\n            <div className=\"footer\">\r\n                    <div>\r\n                        <h3>Coordinators:</h3>\r\n                        <h5>Rajendra Tapadia</h5>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        <h3>Contacts:</h3>\r\n                        <h5>+919490233170</h5>\r\n                    </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Schedule\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\News.js",["149"],"import React, { useContext, useState } from 'react'\r\nimport \"./News.css\"\r\nimport NavigationBar from './NavigationBar';\r\nimport Hamburger from './Hamburger';\r\nimport app from './base';\r\nimport NewTemplate from './NewTemplate';\r\nimport { AuthContext } from './Auth';\r\nimport firebase from 'firebase/app'\r\nimport \"./AdminUpcoming.css\"\r\n\r\nconst News = () => {\r\n\r\n    const [upcomingEvents, setUpcomingEvents] = useState([]);\r\n    const [popVisible, setPopVisible] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [notice, setNotice] = useState(\"\");\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n\r\n    const [isAdmin, setAdmin] = useState(false);\r\n\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const userData = await app.firestore().collection('user').doc(`${currentUser.uid}`).get();\r\n                const data = await app.firestore().collection('news').orderBy(\"date\").get();\r\n                data.docs.forEach((res) => {\r\n                    setUpcomingEvents(oldEvents => [...oldEvents, res.data()]);\r\n                });\r\n                setAdmin(userData.data().isAdmin);\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const submitNews = async () => {\r\n        try {\r\n            await app.firestore().collection('news').doc().set({\r\n                date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n                title: title,\r\n                notice: notice\r\n            });            \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavigationBar />\r\n            <Hamburger title=\"NEWS\" />\r\n            {\r\n                isAdmin===true?(<div className=\"addEvent\">\r\n            <button onClick={() => setPopVisible(!popVisible)}>ADD NOTICE</button>\r\n            </div>): null\r\n            }\r\n\r\n    {\r\n        popVisible?\r\n            (\r\n            <div className=\"popUp\">\r\n                <div className=\"pcontainer\" style={{height: 200}}>\r\n                    \r\n                    \r\n                    <div className=\"notes\">\r\n                        <h5>Title</h5>\r\n                        <input type=\"text\" name=\"title\" id=\"title\" onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\"/>\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>NOTICE</h5>\r\n                        <input type=\"text\" name=\"notice\" id=\"notice\" onChange={(e) => setNotice(e.target.value)} placeholder=\"Notice\" />\r\n                    </div>\r\n                    <div className=\"popUpButtons\">\r\n                        <button className=\"cancel\" onClick={() => {setPopVisible(!popVisible)}}>CANCEL</button>\r\n                        <button className=\"save\" onClick={() => {submitNews(); setPopVisible(!popVisible)}}>SAVE</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            ) : null\r\n        }\r\n\r\n            \r\n            {\r\n              (\r\n                upcomingEvents.map((res) => {\r\n                    return <NewTemplate title={res.title} date={res.date} notice={res.notice}/>\r\n                }))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Rules.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Results.js",["150","151","152","153","154"],"import React, { useState } from 'react'\r\nimport AdminUpcoming from './AdminUpcoming';\r\nimport app from './base';\r\nimport Hamburger from './Hamburger';\r\nimport NavigationBar from './NavigationBar'\r\nimport \"./Results.css\"\r\nimport firebase from 'firebase/app'\r\n\r\nconst Results = () => {\r\n    let month = new Date().getMonth();\r\n    let date = new Date().getDate();\r\n    let year = new Date().getFullYear();\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    // let today = new Date().getTime();\r\n    const [upcomingEvents, setUpcomingEvents] = useState([]);\r\n    const [filteredEvents, setFilteredEvents] = useState([]);\r\n    const [AddEventpopVisible, setAddEventVisible] = useState(false);\r\n\r\n\r\n    const [_slot, setSlot] = useState(\"\");\r\n    const [_uOteam1, setuOteam1] = useState(\"\");\r\n    const [_uOteam2, setuOteam2] = useState(\"\");\r\n    const [_uteam1, setuteam1] = useState(\"\");\r\n    const [_uteam2, setuteam2] = useState(\"\");\r\n    const [_code, setCode] = useState(\"\");\r\n    const [_event, setEvent] = useState(\"\");\r\n    const [_name1, setName1] = useState(\"\");\r\n    const [_name2, setName2] = useState(\"\");\r\n\r\n\r\n    const [text, setText] = useState(\" \");\r\n    const [isSports, setSports] = useState(true);\r\n\r\n    const submitAddEvent = async() => {\r\n        try {\r\n            await app.firestore().collection('events').doc(`${++upcomingEvents.length}`).set({\r\n                eventname: _event,\r\n                Slot: _slot,\r\n                OTeam1: _uOteam1,\r\n                OTeam2: _uOteam2,\r\n                Team1: _uteam1,\r\n                Team2: _uteam2,\r\n                personname1: _name1,\r\n                personname2: _name2,\r\n                Code: _code,\r\n                index: ++upcomingEvents.length,\r\n                isCompleted: false,\r\n                winner: \"\",\r\n                date: firebase.firestore.Timestamp.fromDate(new Date())\r\n            });            \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await app.firestore().collection('events').orderBy(\"date\").get();\r\n                data.docs.forEach((res) => {\r\n                    // if(today.valueOf() < res.data().date.toDate().valueOf()) {\r\n                        setUpcomingEvents(oldEvents => [...oldEvents, res.data()]);\r\n                    // }\r\n                });\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n\r\n        if(upcomingEvents.length===0) {\r\n            fetchData();\r\n        }\r\n\r\n        const temporary = upcomingEvents.filter((data) => {\r\n            const temp1 = text.split(\" \").join(\"\");\r\n            const temp2 = data.eventname.toLowerCase().split(\" \").join(\"\");\r\n            return temp2.indexOf(temp1) !== -1 \r\n        })\r\n\r\n        setFilteredEvents(temporary)\r\n        \r\n    }, [text, upcomingEvents]);\r\n\r\n    const onChangeText = (e) => {\r\n        const temp = e.target.value.toLowerCase();\r\n        setText(temp);\r\n        // filterFunction();\r\n    }\r\n\r\n    const filterFunction = () => {\r\n        setFilteredEvents(upcomingEvents.filter((data) => {\r\n            const temp1 = text.split(\" \").join(\"\");\r\n            const temp2 = data.eventname.toLowerCase().split(\" \").join(\"\");\r\n            return temp2.indexOf(temp1) !== -1 \r\n        }));\r\n        console.log(filteredEvents);\r\n    }\r\n\r\n    return (\r\n        <div> \r\n\r\n        {\r\n        AddEventpopVisible?\r\n            (\r\n            <div className=\"popUp\">\r\n                <div className=\"pcontainer\">\r\n                    \r\n                    \r\n                    <div className=\"notes\">\r\n                        <h5>EVENT NAME</h5>\r\n                        <input type=\"text\" name=\"event\" id=\"event\" onChange={(e) => setEvent(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>SLOT</h5>\r\n                        <input type=\"text\" name=\"slot\" id=\"slot\" onChange={(e) => setSlot(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>ORGANISING TEAM1</h5>\r\n                        <input type=\"text\" name=\"Oteam1\" id=\"Oteam1\" onChange={(e) => setuOteam1(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>ORGANISING TEAM1</h5>\r\n                        <input type=\"text\" name=\"Oteam2\" id=\"Oteam2\" onChange={(e) => setuOteam2(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>TEAM1</h5>\r\n                        <input type=\"text\" name=\"team1\" id=\"team1\" onChange={(e) => setuteam1(e.target.value)}  />\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>TEAM2</h5>\r\n                        <input type=\"text\" name=\"team2\" id=\"team2\" onChange={(e) => setuteam2(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>NAME1</h5>\r\n                        <input type=\"text\" name=\"name1\" id=\"name1\" onChange={(e) => setName1(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>NAME2</h5>\r\n                        <input type=\"text\" name=\"name2\" id=\"name2\" onChange={(e) => setName2(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"notes\">\r\n                        <h5>CODE</h5>\r\n                        <input type=\"text\" name=\"code\" id=\"code\" onChange={(e) => setCode(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"popUpButtons\">\r\n                        <button className=\"cancel\" onClick={() => {setAddEventVisible(!AddEventpopVisible)}}>CANCEL</button>\r\n                        <button className=\"save\" onClick={() => {submitAddEvent(); setAddEventVisible(!AddEventpopVisible)}}>SAVE</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            ) : null\r\n        }\r\n\r\n            <NavigationBar />\r\n            <Hamburger title=\"RESULTS\" />\r\n            <div className=\"resultSection\">\r\n                <div className=\"selectionTabs\">\r\n                    {isSports===true?(\r\n                        <button onClick={() => setSports(true)} style={{border: '#000000 solid 2px'}}>Sports</button>\r\n                    ):(\r\n                        <button onClick={() => setSports(true)}>Sports</button>\r\n                    )}\r\n                    {isSports===false?(\r\n                        <button onClick={() => setSports(false)} style={{border: '#000000 solid 2px'}}>Cultural</button>\r\n\r\n                    ):(\r\n                        <button onClick={() => setSports(false)}>Cultural</button>\r\n                        )}\r\n                </div>\r\n                <div className=\"searchContainer\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"searchEventBar\"\r\n                    onChangeCapture={e => onChangeText(e)}\r\n                    placeholder=\"&#xF042;SELECT AND SEARCH THE EVENT\"\r\n                />\r\n                {/* <div className=\"eventDate\">\r\n                    {months[month]} {date}, {year} \r\n                </div> */}\r\n                <button className=\"addEvent\" onClick={() => {\r\n                        setAddEventVisible(!AddEventpopVisible);\r\n                        // console.log(new Date().toLocaleDateString(\"en-US\"));\r\n                    }\r\n                }>ADD EVENT</button>\r\n                </div>\r\n            </div>\r\n            {\r\n\r\n                isSports===true?(\r\n                filteredEvents.length===0? (\r\n                    upcomingEvents.length !==0?(upcomingEvents.map((res) => {\r\n                    return <AdminUpcoming key={res.index} eventLength={upcomingEvents.length} index={res.index} slot={res.Slot} event={res.eventname} team1={res.Team1} team2={res.Team2} Oteam1={res.OTeam1} Oteam2={res.OTeam2} isAdmin={true} code={res.Code} isCompleted={res.isCompleted} winner={res.winner} date={res.date}/>\r\n                })):(<div className=\"spinnerArea\"><div className=\"spinner\"><div></div><div></div></div></div>)) : (\r\n                    filteredEvents.map((res) => {\r\n                        return <AdminUpcoming key={res.index} eventLength={upcomingEvents.length} index={res.index} slot={res.Slot} event={res.eventname} team1={res.Team1} team2={res.Team2} Oteam1={res.OTeam1} Oteam2={res.OTeam2} isAdmin={true} code={res.Code} isCompleted={res.isCompleted} winner={res.winner} date={res.date}/>\r\n                    })\r\n                )):(null)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Auth.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\SignUp.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Teams.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\BuzzerForm.js",["155","156","157","158","159"],"import React, { useContext, useState } from 'react'\r\nimport app from './base';\r\nimport Hamburger from './Hamburger'\r\nimport NavigationBar from './NavigationBar'\r\nimport \"./BuzzerForm.css\"\r\nimport Buzzer from './Buzzer';\r\n// import { AuthContext } from './Auth';\r\n\r\nconst BuzzerForm = () => {\r\n\r\n    const [isActive, setActive] = useState(false);\r\n\r\n    const [isAdmin, setAdmin] = useState(false);\r\n\r\n    // const {currentUser} = useContext(AuthContext);\r\n\r\n    React.useEffect(() => {\r\n\r\n        // const fetchData = async () => {\r\n        //     try {\r\n        //         const data = await app.firestore().collection('user').doc(`${currentUser.uid}`).get();\r\n        //         setAdmin(data.data().isAdmin);\r\n        //     } catch (error) {\r\n        //         alert(error);\r\n        //     }\r\n        // }\r\n        // fetchData();\r\n        return app.firestore().collection('buzzer').onSnapshot(snapshot => \r\n                setActive(snapshot.docs[0].data().isActive));\r\n            \r\n    }, []);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    // const [phone, setPhone] = useState(null);\r\n    // const [villa, setVilla] = useState(\"\");\r\n    const [group, setGroup] = useState(\"\");\r\n\r\n    // const reset = async () => {\r\n    //     try {\r\n    //         await app.firestore().collection('buzzer').doc('first').update({\r\n    //             winner: false,\r\n    //             isActive: false, \r\n    //             name: \"\",\r\n    //             phone: \"\",\r\n    //             villa: \"\",\r\n    //             group: \"\"\r\n    //         })\r\n    //     } catch (error) {\r\n    //         alert(error);\r\n    //     }\r\n    // }\r\n\r\n    // const activate = async () => {\r\n    //     try {\r\n    //         await app.firestore().collection('buzzer').doc('first').update({\r\n    //             isActive: true\r\n    //         })\r\n    //     } catch (error) {\r\n    //         alert(error);\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {/* {\r\n                currentUser?(\r\n                    <>\r\n                        <NavigationBar />\r\n                        <Hamburger title=\"BUZZER\" />\r\n                    </>\r\n                ) : (null)\r\n            } */}\r\n            {/* <NavigationBar /> */}\r\n            {/* <Hamburger title=\"BUZZER\"/> */}\r\n            <div className=\"result\">\r\n                <h3>RV Togetherness (Antakshari)</h3>\r\n            </div>\r\n            <div className=\"inputForm\">\r\n                {/* <label>\r\n                    NAME\r\n                </label> <br/> */}\r\n                <div className=\"firstInput\">\r\n                    <input className=\"emailInput1\" name=\"email\" type=\"text\" placeholder=\"Enter your name here\" onChange={(e) => setName(e.target.value)}/>\r\n                    {/* <button onClick={() => reset()}>Reset</button>\r\n                    <button onClick={() => activate()}>Activate</button> */}\r\n                </div>\r\n                {/* <label>\r\n                    PHONE NO.\r\n                </label> <br/> */}\r\n                {/* <div className=\"secondInput\">\r\n                    <input className=\"emailInput1\" name=\"password\" type=\"number\" placeholder=\"Enter your mobile no. here\" onChange={(e) => setPhone(e.target.value)}/> <br/>\r\n                </div> */}\r\n                {/* <label>\r\n                    VILLA NO.\r\n                </label> <br/> */}\r\n                 <div className=\"firstInput\">\r\n                    {/* <input type=\"text\" className=\"passwordInput1\" onChange={(e) => setVilla(e.target.value)} /> */}\r\n                    <select className=\"emailInput1\" name=\"team\" id=\"\" value={group} onChange={(e) => setGroup(e.target.value)}>\r\n                        <option value=\"\">Select your team</option>\r\n                        <option value=\"BLUE OCEAN\">BLUE OCEAN</option>\r\n                        <option value=\"GREEN EARTH\">GREEN EARTH</option>\r\n                        <option value=\"RED FIRE\">RED FIRE</option>\r\n                        <option value=\"WHITE WINDS\">WHITE WINDS</option>\r\n                    </select>\r\n                 </div>\r\n            </div>\r\n            \r\n            {\r\n                isActive?(\r\n                    name.length!==0&&group.length!==0?(\r\n                    <div className=\"buzzerComponent\">\r\n                        <Buzzer name={name} group={group} />\r\n                    </div>):(<div className=\"buzzerinactive\" >\r\n                        <span>Please Enter all the fields</span>\r\n                    </div>)\r\n                    ) : (\r\n                    <div className=\"buzzerinactive\" >\r\n                        <span>Buzzer inactive</span>\r\n                    </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuzzerForm\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\BuzzerAdmin.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\base.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\NavigationBar.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\AdminUpcoming.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\NewTemplate.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\UpcomingEvents.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Hamburger.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Buzzer.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Voting.js",["160","161","162","163","164"],"import React, { useState } from 'react';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport app from './base';\r\nimport \"./Voting.css\";\r\nimport uuid from \"uuid/dist/v4\"\r\nimport Hamburger from './Hamburger';\r\nimport NavigationBar from './NavigationBar';\r\nimport { Redirect, useHistory } from 'react-router';\r\n\r\n\r\nconst Voting = (props) => {\r\n    const [characters, updateCharacters] = useState([]);\r\n    // const [ip, updateIP] = useState(\"\");\r\n    const [isActive, setActive] = useState(false);\r\n    const [Pop, setPop] = useState(false);\r\n    const [PopItems, setPopItems] = useState(false);\r\n    const [PopInputItems, setPopInputItems] = useState(false);\r\n    const [PopInput, setPopInput] = useState(false);\r\n    const [eventCode, setCode] = useState(\"\");\r\n    const [InputCode, setInputCode] = useState(\"\");\r\n\r\n    const {event} = props.match.params;\r\n    // const [itemsFromBackend, setItemsFromBackent] = useState([]);\r\n    // let columnsFromBackend = {\r\n    //   [uuid()]: {\r\n    //     name: \"Requested\",\r\n    //     items: itemsFromBackend\r\n    //   },\r\n    //   [uuid()]: {\r\n    //     name: \"To do\",\r\n    //     items: []\r\n    //   }\r\n    // };\r\n    const [columns, setColumns] = useState(null);\r\n    const [itemLength, setItemLength] = useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        return app.firestore().collection('VotingEvents').doc(`${event}`).onSnapshot((snapshot, index) => {\r\n                // updateCharacters(snapshot.data().teams);\r\n                // setItemsFromBackent(snapshot.data().team);\r\n                let columnsFromBackend = {\r\n                  [\"first\"]: {\r\n                    name: \"Requested\",\r\n                    items: snapshot.data().teams\r\n                  },\r\n                  [\"second\"]: {\r\n                    name: \"To do\",\r\n                    items: []\r\n                  }\r\n                };\r\n                setCode(snapshot.data().code);\r\n                setItemLength(snapshot.data().teams);\r\n                setColumns(columnsFromBackend);\r\n                setActive(snapshot.data().isActive);\r\n        });\r\n    }, [event])\r\n\r\n  \r\n\r\n\r\n    const [details, setDetails] = useState(\"\");\r\n    const indices = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\"];\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    \r\n    React.useEffect(() => {\r\n        const getUserGeolocationDetails = () => {\r\n            fetch(\r\n                \"https://geolocation-db.com/json/c0593a60-4159-11eb-80cd-db15f946225f\"\r\n            )\r\n                .then(response => response.json())\r\n                .then(data => setDetails(data.IPv4));\r\n        };\r\n       getUserGeolocationDetails();\r\n    }, [])\r\n\r\n\r\n    const saveData = async () => {\r\n        try {\r\n          if(details!==\"\" && InputCode===eventCode){\r\n              await app.firestore().collection('votingUser').doc(`${details}`).set({\r\n                  [`${event}`]: columns[\"second\"].items\r\n              }, {merge: true})\r\n          } else {\r\n            setPopInput(false);\r\n            setPopInputItems(true);\r\n            return 0;\r\n          }\r\n          setPopInput(false);\r\n          setPop(true)\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(characters);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    updateCharacters(items);\r\n  }\r\n\r\n  const response = () => {\r\n    setPop(false);\r\n    history.goBack();\r\n  }\r\n\r\n  \r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n  \r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems\r\n        }\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <Hamburger title=\"VOTING\" />\r\n      {\r\n          Pop===true ? (\r\n              <div className=\"pop\">\r\n                  <div className=\"popContainer2\" style={{position: 'fixed'}}>\r\n                      <h4>Your Response has been saved</h4>\r\n                      <button style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3, width:\"20%\"}} onClick={() => response()}>OK</button>\r\n                  </div>\r\n              </div>\r\n          ) : (null)\r\n      }\r\n      {\r\n          PopInputItems===true ? (\r\n              <div className=\"pop\">\r\n                  <div className=\"popContainer2\" style={{position: 'fixed'}}>\r\n                      <h4>CODE IS INCORRECT!!!</h4>\r\n                      <button style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3, width:\"20%\"}} onClick={() => setPopInputItems(false)}>OK</button>\r\n                  </div>\r\n              </div>\r\n          ) : (null)\r\n      }\r\n      {\r\n          PopItems===true ? (\r\n              <div className=\"pop\">\r\n                  <div className=\"popContainer2\" style={{position: 'fixed'}}>\r\n                      <h4>Please Rank All Teams</h4>\r\n                      <button style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3, width:\"20%\"}} onClick={() => setPopItems(false)}>OK</button>\r\n                  </div>\r\n              </div>\r\n          ) : (null)\r\n      }\r\n      {\r\n          PopInput===true ? (\r\n              <div className=\"pop\">\r\n                  <div className=\"popContainer2\" style={{position: 'fixed'}}>\r\n                      <h4>Enter the code</h4>\r\n                      <input type=\"text\" name=\"code\" id=\"code\" className=\"emailInput\" style={{width: '70%'}} placeholder=\"Required\" onChange={(e) => setInputCode(e.target.value)}/>\r\n                      <button style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3, width:\"20%\"}} onClick={() => saveData()}>Submit</button>\r\n                  </div>\r\n              </div>\r\n          ) : (null)\r\n      }\r\n          \r\n      {\r\n      isActive===true?\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"stretch\", alignItems: 'stretch', maxheight: \"80vh\"}}>\r\n        <DragDropContext\r\n          onDragEnd={result => onDragEnd(result, columns, setColumns)}\r\n        >\r\n          {Object.entries(columns).map(([columnId, column], index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"stretch\", \r\n                  justifyContent: 'stretch'\r\n                }}\r\n                key={columnId}\r\n              >\r\n                <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                  {column.name===\"Requested\"?(<h3 style={{paddingLeft: '1.2em'}}>The Teams</h3>): (<h3 style={{paddingLeft: '1.2em'}}>Ranking</h3>)}\r\n                </div>\r\n                {\r\n                  column.name===\"Requested\" ? (\r\n                    <div style={{ margin: 'auto', minHeight: 100, width: '90%', padding: '0.6em', border: 'solid 2px #000000', borderRadius: '5px', overflow: 'auto'}}>\r\n                    <Droppable droppableId={columnId} key={columnId}>\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                            style={{\r\n                              display: 'grid',\r\n                              alignItems: 'center',\r\n                              justifyItems: 'center',\r\n                              gridRowGap: '6px',\r\n                              gridColumnGap: '2px',\r\n                              gridTemplateColumns: 'auto auto',\r\n                              gridTemplateRows: 'none',\r\n                              // background: snapshot.isDraggingOver\r\n                              //   ? \"lightblue\"\r\n                              //   : \"lightgrey\",\r\n                              width: '100%',\r\n                              height: '100%', \r\n                            }}\r\n                            \r\n                          >\r\n                            {column.items.map((item, index) => {\r\n                              return (\r\n                                <Draggable\r\n                                  key={item}\r\n                                  draggableId={item}\r\n                                  index={index}\r\n                                >\r\n                                  {(provided, snapshot) => {\r\n                                    return (\r\n                                      <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={{\r\n                                          userSelect: \"none\",\r\n                                          // padding: 16,\r\n                                          // margin: \"0 0 8px 0\",\r\n                                          height: \"32px\",\r\n                                          width: \"161px\",\r\n                                          backgroundColor: snapshot.isDragging\r\n                                            ? \"#969393\"\r\n                                            : \"#C4C4C4\",\r\n                                          color: \"#000000\",\r\n                                          display: 'flex',\r\n                                          justifyContent: 'center', \r\n                                          alignItems: 'center',\r\n                                          borderRadius: '5px',\r\n                                          ...provided.draggableProps.style\r\n                                        }}\r\n                                      >\r\n                                        {item}\r\n                                      </div>\r\n                                    );\r\n                                  }}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    </Droppable>\r\n                  </div>\r\n                    ) : (<div style={{ marginLeft: '3.5em', maxHeight: '50vh', position: 'relative' }}>\r\n                      <div className=\"backgroundLayout\" style={{position: 'absolute'}}>\r\n                        {\r\n                          itemLength.map((elt, index) => {\r\n                            return (\r\n                              <div style={{ display: 'flex', justifyContent: 'center', zIndex: '-10', alignItems: 'center', width: '313px', height: '50px', background: '#E2E2E2', margin: '8px', borderRadius: '5px', position: 'relative'}}><span style={{position: 'absolute', left: '-40px'}}>{indices[index]}</span></div>\r\n                            )\r\n                          })\r\n                        }\r\n                        <div style={{display: 'flex', zIndex: '3', justifyContent: 'center', alignItems: 'center'}}>\r\n                          <button className=\"submit\" onClick={() => {\r\n                            if(columns[\"first\"].items.length===0) {\r\n                              setPopInput(true)\r\n                            } else {\r\n                              setPopItems(true);\r\n                            }\r\n                          }}>Submit</button>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                    <Droppable droppableId={columnId} key={columnId}>\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n\r\n                            <div\r\n                              {...provided.droppableProps}\r\n                              ref={provided.innerRef}\r\n                              style={{\r\n                                background: snapshot.isDraggingOver\r\n                                  ? \"969393\"\r\n                                  : \"C4C4C4\",\r\n                                width: 250,\r\n                                height: 450, \r\n                              }}\r\n                              \r\n                            >\r\n                              {column.items.map((item, index) => {\r\n                                return (\r\n                                  <Draggable\r\n                                    key={item}\r\n                                    draggableId={item}\r\n                                    index={index}\r\n                                  >\r\n                                    {(provided, snapshot) => {\r\n                                      return (\r\n                                        <div\r\n                                          ref={provided.innerRef}\r\n                                          {...provided.draggableProps}\r\n                                          {...provided.dragHandleProps}\r\n                                          style={{\r\n                                            userSelect: \"none\",\r\n                                            height: \"50px\",\r\n                                            width: \"313px\",\r\n                                            backgroundColor: snapshot.isDragging\r\n                                              ? \"#969393\"\r\n                                              : \"#E2E2E2\",\r\n                                            borderRadius: '5px',\r\n                                            display: 'flex', \r\n                                            justifyContent: 'center',\r\n                                            alignItems: 'center',\r\n                                            color: \"#000000\",\r\n                                            ...provided.draggableProps.style,\r\n                                            margin: 8,\r\n                                          }}\r\n                                        >\r\n                                          {item}\r\n                                        </div>\r\n                                      );\r\n                                    }}\r\n                                  </Draggable>\r\n                                );\r\n                              })}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          );\r\n                        }}\r\n                      </Droppable>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }\r\n              </div>\r\n            );\r\n          })}\r\n        </DragDropContext>\r\n      </div> : (\r\n              <div style={{height: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                Voting session has not been activated\r\n              </div>\r\n              )\r\n      }\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Voting\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\AdminVoting.js",["165","166","167"],"import React, { useState } from 'react';\r\nimport \"./AdminVoting.css\"\r\nimport app from './base';\r\nimport Hamburger from './Hamburger';\r\nimport NavigationBar from './NavigationBar';\r\nimport \"./AdminVoting.css\"\r\nimport { useHistory } from 'react-router';\r\n\r\nconst AdminVoting = (props) => {\r\n\r\n    const [votingData, setVotingData] = useState([]);\r\n    const [teams, setTeams] = useState([]);\r\n    const [teamPos, setTeamPos] = useState({});\r\n    const [seeGetData, setData] = useState(false);\r\n    const [popVisible, setPop] = useState(false);\r\n    const [newTeam, setnewTeam] = useState(\"\");\r\n    const [addTeam, setaddTeam] = useState(true);\r\n    const [removeButton, setbuttom] = useState(true);\r\n    const [popAlert, setPopAlert] = useState(false);\r\n\r\n    const { event } = props.match.params;\r\n\r\n    const indices = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\"]\r\n\r\n    const history = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await app.firestore().collection('votingUser').onSnapshot(snapshot => {\r\n                    setVotingData(snapshot.docs);\r\n                })\r\n                await app.firestore().collection('VotingEvents').doc(`${event}`).onSnapshot(snapshot => {\r\n                    setTeams(snapshot.data().teams);\r\n                })\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n\r\n        for(let i of teams) {\r\n            setTeamPos(old => {\r\n                return {...old, [`${i}`]: [0, 0, 0, 0, 0, 0, 0, 0]}\r\n            })\r\n        }\r\n        setData(true);\r\n    }, [teams])\r\n\r\n    const getData = () => {\r\n        votingData.forEach((vote, index1) => {\r\n            // console.log(teamPos[`${vote.data().teams[0]}`][index1])\r\n            vote.data().teams.forEach((elt, index2) => {\r\n                let temp = teamPos[`${elt}`];\r\n                temp[index2]++;\r\n                setTeamPos(old => {\r\n                    return {...old, [`${elt}`]: temp}\r\n                })\r\n                setData(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    const submitTeam = () => {\r\n        if(newTeam!==\"\"){\r\n            setTeams(old => {\r\n                return [...old, newTeam]\r\n            })\r\n        }\r\n        setPop(false)\r\n    }\r\n\r\n    const storeTeams = async () => {\r\n        try {\r\n            await app.firestore().collection('VotingEvents').doc(`${event}`).update({\r\n                teams: teams\r\n            })\r\n            setPopAlert(true)\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* {console.log(teamPos[\"Green A\"])} */}\r\n            <NavigationBar />\r\n            <Hamburger title=\"Admin Voting\" />\r\n            {\r\n                popVisible===true ? (\r\n                    <div className=\"pop\">\r\n                        <div className=\"popContainer2\" style={{position: 'relative'}}>\r\n                            <div className=\"close\" onClick={() => setPop(false)} style={{position: 'absolute', top: '10px', right: '10px'}}>X</div>\r\n                            <h4>Enter Team Name</h4>\r\n                            <input type=\"text\" name=\"team\" id=\"team\" onChange={(e) => setnewTeam(e.target.value)}/>\r\n                            <input style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3, width:\"40%\"}} type=\"submit\" value=\"ADD TEAM\" onClick={() => submitTeam()}/>\r\n                        </div>\r\n                    </div>\r\n                ) : (null)\r\n            }\r\n            {\r\n                popAlert===true ? (\r\n                    <div className=\"pop\">\r\n                        <div className=\"popContainer\" style={{border: 'solid 2px #000000', borderRadius: '10px'}}>\r\n                            <h4>Your Event has been created</h4>\r\n                            <button style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3}} onClick={() => history.goBack()}>OK</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (null)\r\n            }\r\n            {/* {\r\n                votingData.map((res, index) => {\r\n                    return (\r\n                        <div key={res.data().teams}>\r\n                           {index}: {res.data().teams}\r\n                        </div>\r\n                    )\r\n                })\r\n            } */}\r\n            <div className=\"wrapper\">\r\n                <div className=\"upper\">\r\n                        <div className=\"headerVoting\">\r\n                        <h2>{event}</h2>\r\n                        <h5>{new Date().toDateString()}</h5>\r\n                    </div>\r\n                    {\r\n                        teams.length!==null ? (teams.map((elt, index) => {\r\n                            return (\r\n                                <div className=\"teamList\">\r\n                                    <h4 style={{width: '2em'}}>{indices[index]}</h4>\r\n                                    <div className=\"listPart1\">\r\n                                        <h4>{elt}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })) : (null)\r\n                    }\r\n                    {\r\n                        addTeam===true ? (\r\n                            <button onClick={() => setPop(true)} style={{width:\"30%\", backgroundColor:\"grey\", marginLeft: '2em', color: 'vlack', fontWeight: '500', borderRadius:\"5px\"}}>Add Team</button>\r\n                        ) : (null)\r\n                    }\r\n                </div><br />\r\n                <div className=\"lower1\">\r\n                            <button className=\"submit\" style={{width: 140}} onClick={() => storeTeams()}>CONFIRM TEAMS</button>\r\n                </div>\r\n                \r\n            </div>\r\n            {/* {\r\n                votingData.length!==0&&teams.length!==0&&seeGetData===true?(\r\n                    <button onClick={() => getData()}>Get Data</button>\r\n                ):(null)\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminVoting\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\AdminEvent.js",["168"],"import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport \"./AdminEvent.css\";\r\nimport app from './base';\r\nimport Events from './Events';\r\nimport NavigationBar from './NavigationBar';\r\nimport Hamburger from './Hamburger';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst AdminEvent = () => {\r\n\r\n    const [pop, setPop] = useState(false);\r\n    const [popAlert, setPopAlert] = useState(false);\r\n    const [calendarVisible, setCalendarvisible] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const history = useHistory();\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const [eventList, setEventList] = useState([]);\r\n\r\n    React.useEffect(() => {\r\n        return app.firestore().collection('VotingEvents').onSnapshot(snapshot => {\r\n            setEventList(snapshot.docs);\r\n        })\r\n    }, [])\r\n\r\n\r\n    const setEvent = async () => {\r\n        try {\r\n            if(title.length!==0&&desc.length!==0){\r\n                await app.firestore().collection('VotingEvents').doc(`${title}`).set({\r\n                    title: title,\r\n                    desc: desc,\r\n                    teams: [],\r\n                    eventname: title,\r\n                    date: date.toDateString(),\r\n                    isActive: false, \r\n                    code: \"\"\r\n                })\r\n                setPop(!pop);\r\n                setPopAlert(!popAlert);\r\n            }\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavigationBar />\r\n            <Hamburger title=\"ADMIN VOTING\" />\r\n            {\r\n                pop===true ? (\r\n                    <div className=\"popWrapper\">\r\n                        <div className=\"popContainerEvent\" style={{border: 'solid 2px #000000', borderRadius: '10px', position:\"relative\"}}>\r\n                            <div className=\"close\" onClick={() => setPop(false)} style={{position: 'absolute', top: '10px', right: '10px'}}>X</div>\r\n                            <div className=\"cdate\">{date.toDateString()} <span style={{borderBottom: 'solid 1px #000000', marginLeft: '2em'}} onClick={() => setCalendarvisible(!calendarVisible)}>Edit</span></div>\r\n                            {\r\n                                calendarVisible===true ? (\r\n                                <div className=\"calendar\">\r\n                                    <Calendar value={date} onChange={setDate} />\r\n                                </div>) : (null)\r\n                            }\r\n                            <div className=\"form\" onClick={() => setCalendarvisible(false)}>\r\n                                <input type=\"text\" placeholder=\"TITLE\" name=\"title\" id=\"title\" onChange={(e) => setTitle(e.target.value)}/>\r\n                                <input type=\"text\" placeholder=\"DESCRIPTION\" name=\"desc\" id=\"desc\" onChange={(e) => setDesc(e.target.value)}/>\r\n                                <input type=\"submit\" value=\"ADD EVENT\" style={{width: '50%',backgroundColor: \"#4E4E4E\", color:\"white\"}} onClick={() => {\r\n                                    setEvent();\r\n                                }} />\r\n                                {/* <button style={{background: '#cccccc', width: '50%',borderRadius:'7px'}} onClick={() => setPop(false)}>CANCEL</button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (null)\r\n            }\r\n            {\r\n                popAlert===true ? (\r\n                    <div className=\"pop\">\r\n                        <div className=\"popContainer\" style={{border: 'solid 2px #000000', borderRadius: '10px'}}>\r\n                            <h4>Event has been added</h4>\r\n                            <button style={{padding: '1em'}} onClick={() => setPopAlert(!popAlert)}>OK</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (null)\r\n            }<br/>\r\n            \r\n            <div className=\"eventBody\">\r\n                <button className=\"submit\" style={{marginLeft:10}} onClick={() => {\r\n                        setPop(!pop)\r\n                        setTitle(\"\");\r\n                        setDesc(\"\");\r\n                    }\r\n                }>ADD EVENT</button>\r\n                <div className=\"eventsList\" style={{marginBottom: '1em'}}>\r\n                    {\r\n                        eventList.map((res) => {\r\n                            return (\r\n                                <Events key={res.data().title} title={res.data().title} desc={res.data().desc} event={res.data().eventname} date={res.data().date??null} user={false}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminEvent\r\n","C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\Events.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\StartVoting.js",["169","170","171"],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\VotingResult.js",["172"],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\VotingEvent.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\VotingResultList.js",[],"C:\\Users\\Naiyar.2000\\OneDrive\\Desktop\\charkaevent\\rv\\src\\UserResult.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useState } from 'react';\r\nimport app from './base';\r\nimport \"./VotingResult.css\";\r\nimport { Bar } from 'react-chartjs-2'\r\nimport NavigationBar from './NavigationBar';\r\nimport Hamburger from './Hamburger';\r\nimport VotingResultList from './VotingResultList';\r\n\r\nconst UserResult = (props) => {\r\n\r\n    const [votingData, setVotingData] = useState([]);\r\n    const [teams, setTeams] = useState([]);\r\n    const [teamPos, setTeamPos] = useState({});\r\n    const [seeGetData, setData] = useState(false);\r\n    const [popVisible, setPop] = useState(false);\r\n    const [newTeam, setnewTeam] = useState(\"\");\r\n    const [addTeam, setaddTeam] = useState(true);\r\n    const [removeButton, setbuttom] = useState(true);\r\n    const [teamSelected, setTeam] = useState(0);\r\n    const [points, setPoints] = useState({});\r\n    const [pointArray, setPointsArray] = useState([]);\r\n    \r\n    const { event } = props.match.params;\r\n\r\n    const indices = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\"]\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await app.firestore().collection('votingUser').onSnapshot(snapshot => {\r\n                    setVotingData(snapshot.docs);\r\n                })\r\n                await app.firestore().collection('VotingEvents').doc(`${event}`).onSnapshot(snapshot => {\r\n                    setTeams(snapshot.data().teams);\r\n                })\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n\r\n        for(let i of teams) {\r\n            setTeamPos(old => {\r\n                return {...old, [`${i}`]: [0, 0, 0, 0, 0, 0, 0, 0]}\r\n            })\r\n        }\r\n        setData(true);\r\n    }, [teams])\r\n\r\n    const getData = () => {\r\n        votingData.forEach((vote, index1) => {\r\n            // console.log(teamPos[`${vote.data().teams[0]}`][index1])\r\n            if(vote.data()[`${event}`]) {\r\n                vote.data()[`${event}`].forEach((elt, index2) => {\r\n                    let temp = teamPos[`${elt}`];\r\n                    temp[index2]++;\r\n                    setTeamPos(old => {\r\n                        return {...old, [`${elt}`]: temp}\r\n                    })\r\n                    setData(false)\r\n                })\r\n            }\r\n            teams.forEach((elt, index1) => {\r\n                let temp = 0;\r\n                teamPos[`${elt}`].forEach((res, index2) => {\r\n                    temp += res*(10-index2);\r\n                })\r\n                setPoints(old => {\r\n                    return {...old, [`${elt}`]: temp, [`${temp}`]: elt}\r\n                })\r\n            })\r\n            teams.forEach(elt => console.log(elt));\r\n            // getRank();\r\n            setData(false);\r\n        })\r\n    }\r\n\r\n    // const getRank = () => {\r\n    //     teams.forEach((elt, index) => {\r\n    //         setPointsArray(old => [...old, points[elt]])\r\n    //     })\r\n    // }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Hamburger title=\"Result\" />\r\n            <NavigationBar />\r\n            <div className=\"ResultArea\">\r\n                <h2>{event}</h2>\r\n                {/* {\r\n                        teams.length!==null ? (teams.map((elt, index) => {\r\n                            return (\r\n                                <VotingResultList teams={teams} elt={elt} indices={indices} key={index} points={points} index={index}/>\r\n                            )\r\n                        })) : (null)\r\n                } */}\r\n                <VotingResultList teams={teams} points={points} />\r\n                {\r\n                    votingData.length!==0&&teams.length!==0&&seeGetData===true?(\r\n                        <button style={{backgroundColor: \"#4E4E4E\", color:\"white\", borderRadius:3, width:\"30%\"}} onClick={() => getData()}>Get Results</button>\r\n                    ):(null)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default UserResult\r\n",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":46,"column":8,"nodeType":"194","endLine":46,"endColumn":10,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":17,"column":13,"nodeType":"198","messageId":"199","endLine":17,"endColumn":16},{"ruleId":"196","severity":1,"message":"200","line":9,"column":9,"nodeType":"198","messageId":"199","endLine":9,"endColumn":14},{"ruleId":"196","severity":1,"message":"201","line":10,"column":9,"nodeType":"198","messageId":"199","endLine":10,"endColumn":13},{"ruleId":"196","severity":1,"message":"202","line":11,"column":9,"nodeType":"198","messageId":"199","endLine":11,"endColumn":13},{"ruleId":"196","severity":1,"message":"203","line":12,"column":9,"nodeType":"198","messageId":"199","endLine":12,"endColumn":15},{"ruleId":"192","severity":1,"message":"204","line":37,"column":8,"nodeType":"194","endLine":37,"endColumn":10,"suggestions":"205"},{"ruleId":"196","severity":1,"message":"200","line":10,"column":9,"nodeType":"198","messageId":"199","endLine":10,"endColumn":14},{"ruleId":"196","severity":1,"message":"201","line":11,"column":9,"nodeType":"198","messageId":"199","endLine":11,"endColumn":13},{"ruleId":"196","severity":1,"message":"202","line":12,"column":9,"nodeType":"198","messageId":"199","endLine":12,"endColumn":13},{"ruleId":"196","severity":1,"message":"203","line":13,"column":9,"nodeType":"198","messageId":"199","endLine":13,"endColumn":15},{"ruleId":"196","severity":1,"message":"206","line":93,"column":11,"nodeType":"198","messageId":"199","endLine":93,"endColumn":25},{"ruleId":"196","severity":1,"message":"207","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"196","severity":1,"message":"208","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"196","severity":1,"message":"209","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":13,"column":12,"nodeType":"198","messageId":"199","endLine":13,"endColumn":19},{"ruleId":"196","severity":1,"message":"211","line":13,"column":21,"nodeType":"198","messageId":"199","endLine":13,"endColumn":29},{"ruleId":"196","severity":1,"message":"212","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":12},{"ruleId":"196","severity":1,"message":"213","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":43,"column":19,"nodeType":"216","messageId":"217","endLine":46,"endColumn":20,"fix":"218"},{"ruleId":"214","severity":1,"message":"219","line":47,"column":19,"nodeType":"216","messageId":"217","endLine":50,"endColumn":20,"fix":"220"},{"ruleId":"196","severity":1,"message":"221","line":99,"column":12,"nodeType":"198","messageId":"199","endLine":99,"endColumn":27},{"ruleId":"196","severity":1,"message":"222","line":14,"column":12,"nodeType":"198","messageId":"199","endLine":14,"endColumn":22},{"ruleId":"192","severity":1,"message":"223","line":41,"column":8,"nodeType":"194","endLine":41,"endColumn":10,"suggestions":"224"},{"ruleId":"196","severity":1,"message":"225","line":53,"column":11,"nodeType":"198","messageId":"199","endLine":53,"endColumn":18},{"ruleId":"196","severity":1,"message":"226","line":17,"column":11,"nodeType":"198","messageId":"199","endLine":17,"endColumn":18},{"ruleId":"196","severity":1,"message":"227","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":14},{"ruleId":"196","severity":1,"message":"213","line":7,"column":16,"nodeType":"198","messageId":"199","endLine":7,"endColumn":24},{"ruleId":"192","severity":1,"message":"223","line":36,"column":8,"nodeType":"194","endLine":36,"endColumn":10,"suggestions":"228"},{"ruleId":"192","severity":1,"message":"223","line":49,"column":8,"nodeType":"194","endLine":49,"endColumn":10,"suggestions":"229"},{"ruleId":"196","severity":1,"message":"230","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":13},{"ruleId":"196","severity":1,"message":"231","line":15,"column":12,"nodeType":"198","messageId":"199","endLine":15,"endColumn":22},{"ruleId":"196","severity":1,"message":"232","line":15,"column":24,"nodeType":"198","messageId":"199","endLine":15,"endColumn":30},{"ruleId":"196","severity":1,"message":"233","line":16,"column":12,"nodeType":"198","messageId":"199","endLine":16,"endColumn":19},{"ruleId":"196","severity":1,"message":"234","line":16,"column":21,"nodeType":"198","messageId":"199","endLine":16,"endColumn":31},{"ruleId":"196","severity":1,"message":"235","line":17,"column":12,"nodeType":"198","messageId":"199","endLine":17,"endColumn":19},{"ruleId":"196","severity":1,"message":"236","line":17,"column":21,"nodeType":"198","messageId":"199","endLine":17,"endColumn":31},{"ruleId":"196","severity":1,"message":"237","line":18,"column":12,"nodeType":"198","messageId":"199","endLine":18,"endColumn":24},{"ruleId":"196","severity":1,"message":"238","line":18,"column":26,"nodeType":"198","messageId":"199","endLine":18,"endColumn":35},{"ruleId":"196","severity":1,"message":"239","line":19,"column":12,"nodeType":"198","messageId":"199","endLine":19,"endColumn":24},{"ruleId":"196","severity":1,"message":"240","line":19,"column":26,"nodeType":"198","messageId":"199","endLine":19,"endColumn":33},{"ruleId":"196","severity":1,"message":"241","line":21,"column":12,"nodeType":"198","messageId":"199","endLine":21,"endColumn":22},{"ruleId":"196","severity":1,"message":"242","line":21,"column":24,"nodeType":"198","messageId":"199","endLine":21,"endColumn":38},{"ruleId":"196","severity":1,"message":"243","line":25,"column":11,"nodeType":"198","messageId":"199","endLine":25,"endColumn":18},{"ruleId":"192","severity":1,"message":"223","line":41,"column":8,"nodeType":"194","endLine":41,"endColumn":10,"suggestions":"244"},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'nextDay' and 'today'. Either include them or remove the dependency array.","ArrayExpression",["247"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'month' is assigned a value but never used.","'date' is assigned a value but never used.","'year' is assigned a value but never used.","'months' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["248"],"'filterFunction' is assigned a value but never used.","'useContext' is defined but never used.","'Hamburger' is defined but never used.","'NavigationBar' is defined but never used.","'isAdmin' is assigned a value but never used.","'setAdmin' is assigned a value but never used.","'uuid' is defined but never used.","'Redirect' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"first\"] found.","Property","unnecessarilyComputedProperty",{"range":"249","text":"250"},"Unnecessarily computed property [\"second\"] found.",{"range":"251","text":"252"},"'handleOnDragEnd' is defined but never used.","'seeGetData' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.",["253"],"'getData' is assigned a value but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.",["254"],["255"],"'Bar' is defined but never used.","'popVisible' is assigned a value but never used.","'setPop' is assigned a value but never used.","'newTeam' is assigned a value but never used.","'setnewTeam' is assigned a value but never used.","'addTeam' is assigned a value but never used.","'setaddTeam' is assigned a value but never used.","'removeButton' is assigned a value but never used.","'setbuttom' is assigned a value but never used.","'teamSelected' is assigned a value but never used.","'setTeam' is assigned a value but never used.","'pointArray' is assigned a value but never used.","'setPointsArray' is assigned a value but never used.","'indices' is assigned a value but never used.",["256"],"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},[1625,1634],"\"first\"",[1769,1779],"\"second\"",{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"261","fix":"264"},{"desc":"261","fix":"265"},"Update the dependencies array to be: [nextDay, today]",{"range":"266","text":"267"},"Update the dependencies array to be: [currentUser.uid]",{"range":"268","text":"269"},"Update the dependencies array to be: [event]",{"range":"270","text":"271"},{"range":"272","text":"271"},{"range":"273","text":"271"},{"range":"274","text":"271"},[2011,2013],"[nextDay, today]",[1290,1292],"[currentUser.uid]",[1462,1464],"[event]",[1243,1245],[1886,1888],[1548,1550]]